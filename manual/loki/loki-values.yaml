loki:
  auth_enabled: false

  commonConfig:
    replication_factor: 1

  # -- Limits config
  limits_config:
    retention_period: 2160h # 90d (90 * 24 = 2160h)
    reject_old_samples: true
    reject_old_samples_max_age: 168h
    max_cache_freshness_per_query: 10m
    split_queries_by_interval: 15m
    query_timeout: 300s
    volume_enabled: true
    allow_structured_metadata: false # Disable structured metadata for v12 schema

  # -- Schema configuration
  schemaConfig:
    configs:
      - from: 2020-10-24
        store: tsdb
        object_store: s3
        schema: v12
        index:
          prefix: index_
          period: 24h

  # -- Storage config
  storage:
    type: s3
    bucketNames:
      chunks: loki-logs
      ruler: loki-ruler
      admin: loki-admin
    s3:
      endpoint: minio.minio.svc.cluster.local:9000
      region: us-east-1
      accessKeyId: admin
      secretAccessKey: admin1234
      s3ForcePathStyle: true
      insecure: true

  # -- Additional storage config
  storage_config:
    tsdb_shipper:
      active_index_directory: /var/loki/tsdb-index
      cache_location: /var/loki/tsdb-cache
      index_gateway_client:
        server_address: '{{ include "loki.indexGatewayAddress" . }}'
    hedging:
      at: "250ms"
      max_per_second: 20
      up_to: 3

  # -- Compactor configuration
  compactor:
    retention_enabled: true
    working_directory: /var/loki/compactor
    delete_request_store: s3 # Required when retention is enabled

# Raspberry Pi optimized resource configuration
read:
  replicas: 1
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # Schedule on worker nodes only (avoid pi0 control plane)
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist

write:
  replicas: 1
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # Schedule on worker nodes only (avoid pi0 control plane)
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist

backend:
  replicas: 1
  resources:
    limits:
      cpu: 300m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  # Schedule on worker nodes only (avoid pi0 control plane)
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist

# Optimize memcached for low resource usage
chunksCache:
  enabled: true
  replicas: 1
  allocatedMemory: 512 # Reduce from default 8192MB to 512MB
  resources:
    limits:
      cpu: 100m
      memory: 600Mi
    requests:
      cpu: 50m
      memory: 600Mi

resultsCache:
  enabled: true
  replicas: 1
  allocatedMemory: 128 # Reduce from default 1024MB to 128MB
  resources:
    limits:
      cpu: 100m
      memory: 200Mi
    requests:
      cpu: 50m
      memory: 200Mi

# Keep canary enabled (required by Helm chart) but with minimal resources
lokiCanary:
  enabled: true
  resources:
    limits:
      cpu: 50m
      memory: 64Mi
    requests:
      cpu: 25m
      memory: 32Mi

# Gateway configuration - keep disabled for resource savings
promtail:
  enabled: false
gateway:
  enabled: false
